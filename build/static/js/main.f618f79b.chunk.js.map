{"version":3,"sources":["guest-list.jsx","Monogram.svg","web-invite-datelayoutdesign.svg","bg-left.svg","bg-right.svg","rsvp.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["GuestList","props","useState","guests","setGuests","codeGuest","setCodeGuest","viewCode","setViewCode","form","useRef","useEffect","getGuests","fetch","then","response","json","data","nullifyEmptyStrings","key","value","Fragment","className","ref","style","maxWidth","onSubmit","e","preventDefault","formData","FormData","current","formJson","JSON","stringify","Object","fromEntries","method","headers","body","status","alert","updatedList","push","target","reset","required","name","placeholder","map","guest","linked_to","id","first_name","last_name","display_name","responded_at","attending","requirements","accomodation","onClick","length","alt","src","href","Rsvp","token","useParams","sentIds","setSentIds","forms","Names","g1","g2","forEach","i","join","stringToBool","designLeft","designRight","monogram","date","idList","handleSend","type","includes","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f618f79b.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\r\nimport QRCode from 'qrcode.react';\r\nimport { saveAs } from 'file-saver';\r\n\r\nfunction GuestList(props) {\r\n    const [guests, setGuests] = useState([]);\r\n    const [codeGuest, setCodeGuest] = useState()\r\n    const [viewCode, setViewCode] = useState(false)\r\n\r\n    const form = useRef(null)\r\n\r\n    useEffect(() => {\r\n        getGuests()\r\n    }, []);\r\n\r\n    const getGuests = () => {\r\n        fetch(\"https://ashkev.peterboroughtenants.app/api/guests\")\r\n            .then(response => response.json())\r\n            .then(data => setGuests(data))\r\n    }\r\n\r\n    const deleteGuest = (id) => {\r\n        fetch(`https://ashkev.peterboroughtenants.app/api/guests/${id}`, {\r\n            method: 'DELETE'\r\n        }).then(() => getGuests())\r\n    }\r\n\r\n    const nullifyEmptyStrings = (key, value) => {\r\n        if (value === '') {\r\n            return undefined\r\n        }\r\n        return value\r\n    }\r\n\r\n    const addNewGuest = (e) => {\r\n        e.preventDefault()\r\n        const formData = new FormData(form.current)\r\n        let formJson = JSON.stringify(Object.fromEntries(formData), nullifyEmptyStrings)\r\n\r\n        fetch('https://ashkev.peterboroughtenants.app/api/guests', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: formJson\r\n        })\r\n            .then(response => {\r\n                if (response.status !== 200) {\r\n                    alert('There was a problem adding the new guest.')\r\n                    return null\r\n                }\r\n                return response.json()\r\n            })\r\n            .then(data => {\r\n                if (data === null) {\r\n                    return\r\n                }\r\n                const updatedList = []\r\n                updatedList.push(...guests, data)\r\n                setGuests(updatedList)\r\n                e.target.reset()\r\n            })\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <header className=\"p-6\">\r\n                <h1 className=\"font-bold text-xl\">Guest List</h1>\r\n            </header>\r\n\r\n            <form ref={form} className=\"p-6 print:hidden\" style={{ maxWidth: '550px' }} onSubmit={addNewGuest}>\r\n                <header className=\"mb-3 border-b pb-2 w-full\">\r\n                    Add new guest\r\n                </header>\r\n                <dl className=\"grid grid-cols-2 gap-3\">\r\n                    <dt className=\"font-bold col-start-1 col-span-1\">Name</dt>\r\n                    <dd className=\"col-start-2 col-span-1\">\r\n                        <input required className=\"w-full border shadow-inner p-2 mx-1\" name=\"first_name\" placeholder=\"First Name\" />\r\n                    </dd>\r\n                    <dd className=\"col-start-2 col-span-1\">\r\n                        <input required className=\"w-full border shadow-inner p-2 mx-1\" name=\"last_name\" placeholder=\"Last Name\" />\r\n                    </dd>\r\n                    <dt className=\"font-bold col-start-1 col-span-1\">\r\n                        Display Name\r\n                    </dt>\r\n                    <dd>\r\n                        <input className=\"w-full border shadow-inner p-2 mx-1\" name=\"display_name\" />\r\n                    </dd>\r\n                    <dt className=\"font-bold col-start-1 col-span-1\">\r\n                        Parent ID\r\n                    </dt>\r\n                    <dd>\r\n                        <input className=\"w-full border shadow-inner p-2 mx-1\" name=\"linked_to\" />\r\n                    </dd>\r\n                </dl>\r\n                <button className=\"border-b-2 border-blue-400 bg-blue-200 text-blue-900 py-1 hover:bg-blue-100 px-3\">Save</button>\r\n            </form>\r\n\r\n            <main className=\"overflow-y-hidden\">\r\n                <table className=\"w-full overflow-y-scroll pr-3\">\r\n                    <thead className=\"border-b-2 top-0 sticky bg-gray-100\">\r\n                        <tr>\r\n                            <th className=\"py-3 px-3 text-left pl-6\">Id</th>\r\n                            <th className=\"py-3 px-3 text-left\">Full Name</th>\r\n                            <th className=\"py-3 px-3 text-left\">Display Name</th>\r\n                            <th className=\"py-3 px-3 text-left\">Parent ID</th>\r\n                            <th className=\"py-3 px-3 text-left\">Attending</th>\r\n                            <th className=\"py-3 px-3 text-left\">Requirements</th>\r\n                            <th className=\"py-3 px-3 text-left\">Accomodation</th>\r\n                            <th className=\"py-3 px-3 text-left print:hidden\">QR Code</th>\r\n                            <th className=\"print:hidden pr-6\"></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {guests.map(guest => (\r\n                            <tr>\r\n                                <td className=\"py-2 px-3 pl-6 border-b\">\r\n                                    {guest.linked_to === null && guest.id}\r\n                                </td>\r\n                                <td className=\"py-2 px-3 border-b\">\r\n                                    {guest.first_name} {guest.last_name}\r\n                                </td>\r\n                                <td className=\"py-2 px-3 border-b\">\r\n                                    {guest.display_name}\r\n                                </td>\r\n                                <td className=\"py- px-3 border-b\">\r\n                                    {guest.linked_to}\r\n                                </td>\r\n                                <td className=\"py-2 px-3 border-b\">\r\n                                    {guest.responded_at === null ? \"\" : (\r\n                                        guest.attending ? \"YES\" : \"NO\"\r\n                                    )}\r\n                                </td>\r\n                                <td className=\"py-2 px-3 border-b\">\r\n                                    {guest.requirements}\r\n                                </td>\r\n                                <td className=\"py-2 px-3 border-b\">\r\n                                    {guest.accomodation && \"Required\"}\r\n                                </td>\r\n                                <td className=\"py-2 px-3 border-b print:hidden\">\r\n                                    <button className=\"underline hover:text-blue-700\" onClick={() => {\r\n                                        setCodeGuest(guest)\r\n                                        setViewCode(true)\r\n                                    }}>\r\n                                        View\r\n                                    </button>\r\n                                </td>\r\n                                <td className=\"py-2 px-3 border-b print:hidden pr-6\">\r\n                                    <button className=\"underline hover:text-blue-700\" onClick={() => deleteGuest(guest.id)}>\r\n                                        Delete\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n\r\n                {guests.length === 0 && (\r\n                    <div className=\"p-6 my-6 bg-gray-200 text-center\">\r\n                        There are no guests added.\r\n                    </div>\r\n                )}\r\n            </main>\r\n\r\n            {viewCode && (\r\n                <section className=\"flex sticky bottom-0 w-full bg-white p-6 border-t-2 justify-between items-start\">\r\n                    <div className=\"flex gap-6\">\r\n                        <img alt=\"qr code\" src={`https://ashkev.peterboroughtenants.app/api/qr-code/${codeGuest.linked_to || codeGuest.id}`} />\r\n                        <aside className=\"pl-6 border-l flex flex-col gap-5\">\r\n                            <a href={`https://ashkev.peterboroughtenants.app/rsvp/${codeGuest.linked_to || codeGuest.id}`} target=\"_blank\" className=\"block border-b-2 border-blue-400 bg-blue-200 text-blue-900 py-1 hover:bg-blue-100 px-3\">\r\n                                RSVP Page \r\n                            </a>\r\n                            <a href={`https://ashkev.peterboroughtenants.app/api/qr-code/${codeGuest.linked_to || codeGuest.id}`} className=\"block border-b-2 border-green-400 bg-green-200 text-green-900 py-1 hover:bg-green-100 px-3\">\r\n                                Download\r\n                            </a>\r\n                        </aside>\r\n                    </div>\r\n                    <button className=\"underline hover:text-blue-700\" onClick={() => setViewCode(false)}>Close</button>\r\n                </section>\r\n            )}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default GuestList","export default __webpack_public_path__ + \"static/media/Monogram.b03ad541.svg\";","export default __webpack_public_path__ + \"static/media/web-invite-datelayoutdesign.c8265ef0.svg\";","export default __webpack_public_path__ + \"static/media/bg-left.fb7462c6.svg\";","export default __webpack_public_path__ + \"static/media/bg-right.e2002390.svg\";","import React, { useState, useEffect, useRef, createRef } from 'react'\r\nimport { useParams } from 'react-router'\r\nimport monogram from './Monogram.svg'\r\nimport date from './web-invite-datelayoutdesign.svg'\r\nimport designLeft from './bg-left.svg'\r\nimport designRight from './bg-right.svg'\r\n\r\nfunction Rsvp(props) {\r\n    let { token } = useParams();\r\n    const [guests, setGuests] = useState([])\r\n    const [sentIds, setSentIds] = useState([])\r\n\r\n    const forms = useRef([])\r\n\r\n    useEffect(() => {\r\n        getGuests()\r\n    }, []);\r\n\r\n    const getGuests = () => {\r\n        fetch(`https://ashkev.peterboroughtenants.app/api/rsvp/${token}`)\r\n            .then(response => response.json())\r\n            .then(data => setGuests(data))\r\n    }\r\n\r\n    const Names = (props) => {\r\n        let name = [];\r\n\r\n        if (guests.length === 0) {\r\n            name[0] = \"Loading...\"\r\n        }\r\n\r\n        if (guests.length === 1) {\r\n            name[0] = guests[0].display_name || `${guests[0].first_name} ${guests[0].last_name}`\r\n        }\r\n\r\n        if (guests.length === 2) {\r\n            let g1 = guests[0].display_name || guests[0].first_name + (guests[0].last_name === guests[1].last_name ? '' : ' ' + guests[0].last_name)\r\n            let g2 = guests[1].display_name || `${guests[1].first_name} ${guests[1].last_name}`\r\n\r\n            name[0] = g1 + ' & ' + g2\r\n        }\r\n\r\n        if (guests.length > 2) {\r\n            name = []\r\n            guests.forEach((guest, i) => {\r\n                name[i] = guest.display_name || `${guest.first_name} ${guest.last_name}`\r\n            })\r\n\r\n        }\r\n\r\n        return (\r\n            <p className=\"font-bold my-6 text-2xl capitalize\">\r\n                <span className=\"text-sm\">TO: </span>\r\n                {name.join(\", \")}\r\n            </p>\r\n        )\r\n    }\r\n\r\n    const stringToBool = (key, value) => {\r\n        if (value === \"true\") {\r\n            return true\r\n        }\r\n        if (value === \"false\") {\r\n            return false\r\n        }\r\n\r\n        return value\r\n    }\r\n\r\n    const handleSend = (e, guest, i) => {\r\n        e.preventDefault()\r\n        const formData = new FormData(forms.current[i])\r\n        let formJson = JSON.stringify(Object.fromEntries(formData), stringToBool)\r\n\r\n        fetch(`https://ashkev.peterboroughtenants.app/api/rsvp/${guest.id}`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: formJson\r\n        }).then(response => {\r\n            if (response.status !== 200 ) {\r\n                return\r\n            }\r\n\r\n            let idList = []\r\n            idList.push(...sentIds, guest.id) \r\n            setSentIds(idList)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <main className=\"grid grid-cols-1 grid-rows-1 border-fat border-gold max-w-prose mx-auto\">\r\n                <img alt=\"Grey whirl\" src={designLeft} className=\"col-span-full row-span-full w-1/2 self-end\" />\r\n                <img alt=\"Another grey whirl\" src={designRight} className=\"col-span-full row-span-full w-1/2 self-end justify-self-end\" />\r\n                <div className=\"col-span-full row-span-full\">\r\n                    <img alt=\"Ashley & Kevin\" src={monogram} className=\"w-full object-cover object-center h-auto mb-12\" />\r\n                    <header className=\"font-serif text-center px-8 mt-12 mb-6\">\r\n                        <h1 className=\"uppercase my-6\">\r\n                            The marriage of Ashley Beech & Kevin Goodger\r\n                        </h1>\r\n                        <Names />\r\n                        <p className=\"text-gray-600 text-sm\">\r\n                            Please RSVP using the form below\r\n                        </p>\r\n                    </header>\r\n                    <img alt=\"Saturday 30th July 2022 at 2PM\" src={date} className=\"w-full object-contain object-center h-auto px-8 mb-6\" />\r\n                    <p className=\"font-serif text-center uppercase px-6 mx-6 mb-10\">\r\n                        We would like to request the pleasure of your company to join us\r\n                        in celebrating our love\r\n                    </p>\r\n                </div>\r\n            </main>\r\n            <section className=\"border-fat border-gold max-w-prose mx-auto border-t-0 pt-6\">\r\n                {guests.map((guest, i) => (\r\n                    <form key={guest.id} ref={(ref) => forms.current.push(ref)} onSubmit={e => handleSend(e, guest, i)} className=\"px-6 mb-6 font-serif\">\r\n                        <h2 className=\"text-center underline\">{guest.first_name} {guest.last_name}:</h2>\r\n                        <div className=\"md:flex gap-3 my-3\">\r\n                            <div className=\"p-2 divide-solid w-1/3\">\r\n                                <p className=\"font-bold md:text-xs\">Can you attend?</p>\r\n                                <label className=\"md:text-xs block my-2\">\r\n                                    <input className=\"mr-2\" type=\"radio\" name=\"attending\" value=\"true\" />\r\n                                    Yes\r\n                                </label>\r\n                                <label className=\"md:text-xs block my-2\">\r\n                                    <input className=\"mr-2\" type=\"radio\" name=\"attending\" value=\"false\" />\r\n                                    No\r\n                                </label>\r\n                            </div>\r\n\r\n                            <div className=\"p-2 divide-solid w-1/3\">\r\n                                <p className=\"font-bold md:text-xs\">Do you require accomodation?</p>\r\n                                <label className=\"md:text-xs block my-2\">\r\n                                    <input className=\"mr-2\" type=\"radio\" name=\"accomodation\" value=\"true\" />\r\n                                    Yes\r\n                                </label>\r\n                                <label className=\"md:text-xs block my-2\">\r\n                                    <input className=\"mr-2\" type=\"radio\" name=\"accomodation\" value=\"false\" />\r\n                                    No\r\n                                </label>\r\n                            </div>\r\n\r\n                            <div className=\"p-2 divide-solid\">\r\n                                <label className=\"font-bold md:text-xs\">Do you have any other requirements (e.g. dietary)</label>\r\n                                <textarea className=\"my-2 p-1 md:text-xs w-full border shadow-inner\" name=\"requirements\"></textarea>\r\n                            </div>\r\n                        </div>\r\n                        <footer className=\"flex\">\r\n                            <button className=\"p-2 bg-gray-200 hover:bg-gray-900 hover:text-gold\">Send</button>\r\n                            {sentIds.includes(guest.id) && (\r\n                                <span className=\"p-2 bg-green-200 mx-3\">Saved</span>\r\n                            )}\r\n                        </footer>\r\n                    </form>\r\n                ))}\r\n            </section>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Rsvp","import { Route, Switch } from 'react-router-dom'\nimport GuestList from './guest-list'\nimport Rsvp from './rsvp'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/rsvp/:token\" component={Rsvp} />\n\n        <Route path=\"/guests/secret-link\" component={GuestList} />\n        \n        <Route path=\"/\">\n          404: Invalid page\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}